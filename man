package main

import 
    fmt
    ioioutil
    log
    os
    math


const no_permission  
const r_w_e_o_o    Read Write Execute owner only
const r_w_e_o_a_g    Read Write Execute owner and group
const r_w_e_o_g_o    Read Write Execute owner group and others
const execute  
const write  
const write_and_execute  
const read  
const read_and_execute  
const read_and_write  
const special    Only owner can read and write owner and group can execute Others have no permission

type charInfo struct 
    invalidChars    []byte
    validChars      []byte


type fileInfo struct 
    filename    string
    data        []byte
    filesize    int
    size_in_mb  float
    c_i         []charInfo
    index       int


func setupfilename string data []byte fileInfo 
    info  fileInfo filename filename data data 
    
    _ e  osStatinfofilename
    
    if e  nil 
        if osIsExiste 
            logFatalFile already exists
            osExit
        
    
    
    file err  osCreateinfofilename
    
    if err  nil 
        logFatalError writing to the file
    

    size err  fileWriteinfodata
    fileClose
    
    infofilesize  intsize
    infosize_in_mb  floatinfofilesize    
    return info


func info fileInfo new_infofilename string fileInfo 

    if filename   
        infofilename  filename
    

    file err  osStatinfofilename
    infofilesize  fileSize
    
    if err  nil 
        logFatalError with openeing and reading the file
    
    
    if intfileSize  infofilesize 
        data err  ioutilReadFileinfofilename

        if err  nil 
            logFatalError reading the data
            logFatalerr
        

        infosize_in_mb  floatmathRoundfloatinfofilesize    

        return fileInfofilename infofilename filesize infofilesize data data size_in_mb infosize_in_mb
    
    return fileInfofilename infofilename filesize  data nil


func info fileInfo gather_all 
    c_i  charInfo 
    for i   i  intinfofilesize i 
        if infodata[i]  x  infodata[i]  xa 
            if infodata[i]  x  infodata[i]  xa 
                c_ivalidChars  appendc_ivalidChars infodata[i]
            
            c_iinvalidChars  appendc_iinvalidChars infodata[i]
         else 
            c_ivalidChars  appendc_ivalidChars infodata[i]
        
    

    if lenc_iinvalidChars   
        infoc_i  appendinfoc_i c_i
        infoindex  
    


func info fileInfo write_validtoFile string 
    if toFile   
        logFatalCannot write to a undefined file
    
    file err  osStatinfofilename

    if err  nil 
        logFatalerr
    

    if fileSize  infofilesize 
        infofilename  toFile
        _ err  osStatinfofilename

        if err  nil 
            if osIsNotExisterr 
                _err  osCreateinfofilename

                if err  nil 
                    logFatalerr
                
            
        
        
        file err  osOpenFileinfofilename osO_WRONLYosO_CREATE 
        defer fileClose

        if err  nil 
            logFatalerr
        

        fileWriteStringstringinfoc_i[infoindex  ]validChars
    


func info fileInfo write_invalidtoFile string 
    if toFile   
        logFatalCannot write to a undefined file
    
    file err  osStatinfofilename

    if err  nil 
        logFatalerr
    

    if fileSize  infofilesize 
        infofilename  toFile
        _ err  osStatinfofilename

        if err  nil 
            if osIsNotExisterr 
                _err  osCreateinfofilename

                if err  nil 
                    logFatalerr
                
            
        

        file err  osOpenFileinfofilename osO_WRONLYosO_CREATE 
        defer fileClose

        if err  nil 
            logFatalerr
        

        fileWriteStringstringinfoc_i[infoindex  ]invalidChars
    


func main  
    str  Hey bro
    f_info  setupman []bytestr
    f_info  f_infonew_infomaingo

    fmtPrintstringf_infodata   \n\t\t  f_infofilename   has  f_infofilesize    bits which is  f_infofilesize  in bytes which is
    fmtPrintf f MB f_infosize_in_mb

    f_infogather_all
    f_infowrite_validman
    f_infowrite_invalidman
